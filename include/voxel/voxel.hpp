#ifndef __hemlock_voxel_voxel_hpp
#define __hemlock_voxel_voxel_hpp

#include "graphics/mesh.h"

namespace hemlock {
    namespace voxel {
        using VoxelID = ui64;

        struct Voxel {
            VoxelID id;
            // more stuff
        };

        const Voxel NULL_VOXEL = Voxel{ 0 };

        const ui32 VOXEL_VERTEX_COUNT = 36;

        using VoxelVertex   = hg::Colourless_3D_32_Normal_Vertex;
        using VoxelMeshData = hg::ConstColourless_3D_32_Normal_MeshData;

        // static VoxelVertex* const VOXEL_VERTICES = new
        // VoxelVertex[VOXEL_VERTEX_COUNT] {
        //     /* FRONT */
        //     { {  0.5f, -0.5f, -0.5f }, { 1.0f, 0.0f }, {  0.0f,  0.0f, -1.0f } },
        //     { { -0.5f, -0.5f, -0.5f }, { 0.0f, 0.0f }, {  0.0f,  0.0f, -1.0f } },
        //     { {  0.5f,  0.5f, -0.5f }, { 1.0f, 1.0f }, {  0.0f,  0.0f, -1.0f } },
        //     { {  0.5f,  0.5f, -0.5f }, { 1.0f, 1.0f }, {  0.0f,  0.0f, -1.0f } },
        //     { { -0.5f, -0.5f, -0.5f }, { 0.0f, 0.0f }, {  0.0f,  0.0f, -1.0f } },
        //     { { -0.5f,  0.5f, -0.5f }, { 0.0f, 1.0f }, {  0.0f,  0.0f, -1.0f } },
        //     /* BACK */
        //     { { -0.5f, -0.5f,  0.5f }, { 0.0f, 0.0f }, {  0.0f,  0.0f,  1.0f } },
        //     { {  0.5f, -0.5f,  0.5f }, { 1.0f, 0.0f }, {  0.0f,  0.0f,  1.0f } },
        //     { {  0.5f,  0.5f,  0.5f }, { 1.0f, 1.0f }, {  0.0f,  0.0f,  1.0f } },
        //     { {  0.5f,  0.5f,  0.5f }, { 1.0f, 1.0f }, {  0.0f,  0.0f,  1.0f } },
        //     { { -0.5f,  0.5f,  0.5f }, { 0.0f, 1.0f }, {  0.0f,  0.0f,  1.0f } },
        //     { { -0.5f, -0.5f,  0.5f }, { 0.0f, 0.0f }, {  0.0f,  0.0f,  1.0f } },
        //     /* LEFT */
        //     { { -0.5f,  0.5f,  0.5f }, { 1.0f, 0.0f }, { -1.0f,  0.0f,  0.0f } },
        //     { { -0.5f,  0.5f, -0.5f }, { 1.0f, 1.0f }, { -1.0f,  0.0f,  0.0f } },
        //     { { -0.5f, -0.5f, -0.5f }, { 0.0f, 1.0f }, { -1.0f,  0.0f,  0.0f } },
        //     { { -0.5f, -0.5f, -0.5f }, { 0.0f, 1.0f }, { -1.0f,  0.0f,  0.0f } },
        //     { { -0.5f, -0.5f,  0.5f }, { 0.0f, 0.0f }, { -1.0f,  0.0f,  0.0f } },
        //     { { -0.5f,  0.5f,  0.5f }, { 1.0f, 0.0f }, { -1.0f,  0.0f,  0.0f } },
        //     /* RIGHT */
        //     { {  0.5f,  0.5f, -0.5f }, { 1.0f, 1.0f }, {  1.0f,  0.0f,  0.0f } },
        //     { {  0.5f,  0.5f,  0.5f }, { 1.0f, 0.0f }, {  1.0f,  0.0f,  0.0f } },
        //     { {  0.5f, -0.5f, -0.5f }, { 0.0f, 1.0f }, {  1.0f,  0.0f,  0.0f } },
        //     { {  0.5f, -0.5f, -0.5f }, { 0.0f, 1.0f }, {  1.0f,  0.0f,  0.0f } },
        //     { {  0.5f,  0.5f,  0.5f }, { 1.0f, 0.0f }, {  1.0f,  0.0f,  0.0f } },
        //     { {  0.5f, -0.5f,  0.5f }, { 0.0f, 0.0f }, {  1.0f,  0.0f,  0.0f } },
        //     /* BOTTOM */
        //     { { -0.5f, -0.5f, -0.5f }, { 0.0f, 1.0f }, {  0.0f, -1.0f,  0.0f } },
        //     { {  0.5f, -0.5f, -0.5f }, { 1.0f, 1.0f }, {  0.0f, -1.0f,  0.0f } },
        //     { {  0.5f, -0.5f,  0.5f }, { 1.0f, 0.0f }, {  0.0f, -1.0f,  0.0f } },
        //     { {  0.5f, -0.5f,  0.5f }, { 1.0f, 0.0f }, {  0.0f, -1.0f,  0.0f } },
        //     { { -0.5f, -0.5f,  0.5f }, { 0.0f, 0.0f }, {  0.0f, -1.0f,  0.0f } },
        //     { { -0.5f, -0.5f, -0.5f }, { 0.0f, 1.0f }, {  0.0f, -1.0f,  0.0f } },
        //     /* TOP */
        //     { {  0.5f,  0.5f, -0.5f }, { 1.0f, 1.0f }, {  0.0f,  1.0f,  1.0f } },
        //     { { -0.5f,  0.5f, -0.5f }, { 0.0f, 1.0f }, {  0.0f,  1.0f,  1.0f } },
        //     { {  0.5f,  0.5f,  0.5f }, { 1.0f, 0.0f }, {  0.0f,  1.0f,  1.0f } },
        //     { {  0.5f,  0.5f,  0.5f }, { 1.0f, 0.0f }, {  0.0f,  1.0f,  1.0f } },
        //     { { -0.5f,  0.5f, -0.5f }, { 0.0f, 1.0f }, {  0.0f,  1.0f,  1.0f } },
        //     { { -0.5f,  0.5f,  0.5f }, { 0.0f, 0.0f }, {  0.0f,  1.0f,  1.0f } }
        // };

        static const VoxelVertex VOXEL_VERTICES[VOXEL_VERTEX_COUNT] = {
  /* FRONT */
            {{ 1.0f, 0.0f, 0.0f }, { 1.0f, 0.0f }, { 0.0f, 0.0f, -1.0f }},
            {{ 0.0f, 0.0f, 0.0f }, { 0.0f, 0.0f }, { 0.0f, 0.0f, -1.0f }},
            {{ 1.0f, 1.0f, 0.0f }, { 1.0f, 1.0f }, { 0.0f, 0.0f, -1.0f }},
            {{ 1.0f, 1.0f, 0.0f }, { 1.0f, 1.0f }, { 0.0f, 0.0f, -1.0f }},
            {{ 0.0f, 0.0f, 0.0f }, { 0.0f, 0.0f }, { 0.0f, 0.0f, -1.0f }},
            {{ 0.0f, 1.0f, 0.0f }, { 0.0f, 1.0f }, { 0.0f, 0.0f, -1.0f }},
 /* BACK */
            {{ 0.0f, 0.0f, 1.0f }, { 0.0f, 0.0f },  { 0.0f, 0.0f, 1.0f }},
            {{ 1.0f, 0.0f, 1.0f }, { 1.0f, 0.0f },  { 0.0f, 0.0f, 1.0f }},
            {{ 1.0f, 1.0f, 1.0f }, { 1.0f, 1.0f },  { 0.0f, 0.0f, 1.0f }},
            {{ 1.0f, 1.0f, 1.0f }, { 1.0f, 1.0f },  { 0.0f, 0.0f, 1.0f }},
            {{ 0.0f, 1.0f, 1.0f }, { 0.0f, 1.0f },  { 0.0f, 0.0f, 1.0f }},
            {{ 0.0f, 0.0f, 1.0f }, { 0.0f, 0.0f },  { 0.0f, 0.0f, 1.0f }},
 /* LEFT */
            {{ 0.0f, 1.0f, 1.0f }, { 1.0f, 0.0f }, { -1.0f, 0.0f, 0.0f }},
            {{ 0.0f, 1.0f, 0.0f }, { 1.0f, 1.0f }, { -1.0f, 0.0f, 0.0f }},
            {{ 0.0f, 0.0f, 0.0f }, { 0.0f, 1.0f }, { -1.0f, 0.0f, 0.0f }},
            {{ 0.0f, 0.0f, 0.0f }, { 0.0f, 1.0f }, { -1.0f, 0.0f, 0.0f }},
            {{ 0.0f, 0.0f, 1.0f }, { 0.0f, 0.0f }, { -1.0f, 0.0f, 0.0f }},
            {{ 0.0f, 1.0f, 1.0f }, { 1.0f, 0.0f }, { -1.0f, 0.0f, 0.0f }},
 /* RIGHT */
            {{ 1.0f, 1.0f, 0.0f }, { 1.0f, 1.0f },  { 1.0f, 0.0f, 0.0f }},
            {{ 1.0f, 1.0f, 1.0f }, { 1.0f, 0.0f },  { 1.0f, 0.0f, 0.0f }},
            {{ 1.0f, 0.0f, 0.0f }, { 0.0f, 1.0f },  { 1.0f, 0.0f, 0.0f }},
            {{ 1.0f, 0.0f, 0.0f }, { 0.0f, 1.0f },  { 1.0f, 0.0f, 0.0f }},
            {{ 1.0f, 1.0f, 1.0f }, { 1.0f, 0.0f },  { 1.0f, 0.0f, 0.0f }},
            {{ 1.0f, 0.0f, 1.0f }, { 0.0f, 0.0f },  { 1.0f, 0.0f, 0.0f }},
 /* BOTTOM */
            {{ 0.0f, 0.0f, 0.0f }, { 0.0f, 1.0f }, { 0.0f, -1.0f, 0.0f }},
            {{ 1.0f, 0.0f, 0.0f }, { 1.0f, 1.0f }, { 0.0f, -1.0f, 0.0f }},
            {{ 1.0f, 0.0f, 1.0f }, { 1.0f, 0.0f }, { 0.0f, -1.0f, 0.0f }},
            {{ 1.0f, 0.0f, 1.0f }, { 1.0f, 0.0f }, { 0.0f, -1.0f, 0.0f }},
            {{ 0.0f, 0.0f, 1.0f }, { 0.0f, 0.0f }, { 0.0f, -1.0f, 0.0f }},
            {{ 0.0f, 0.0f, 0.0f }, { 0.0f, 1.0f }, { 0.0f, -1.0f, 0.0f }},
 /* TOP */
            {{ 1.0f, 1.0f, 0.0f }, { 1.0f, 1.0f },  { 0.0f, 1.0f, 1.0f }},
            {{ 0.0f, 1.0f, 0.0f }, { 0.0f, 1.0f },  { 0.0f, 1.0f, 1.0f }},
            {{ 1.0f, 1.0f, 1.0f }, { 1.0f, 0.0f },  { 0.0f, 1.0f, 1.0f }},
            {{ 1.0f, 1.0f, 1.0f }, { 1.0f, 0.0f },  { 0.0f, 1.0f, 1.0f }},
            {{ 0.0f, 1.0f, 0.0f }, { 0.0f, 1.0f },  { 0.0f, 1.0f, 1.0f }},
            {{ 0.0f, 1.0f, 1.0f }, { 0.0f, 0.0f },  { 0.0f, 1.0f, 1.0f }}
        };

        const VoxelMeshData VOXEL_MESH = { &VOXEL_VERTICES[0], VOXEL_VERTEX_COUNT };
    }  // namespace voxel
}  // namespace hemlock
namespace hvox = hemlock::voxel;

inline bool operator==(hvox::Voxel lhs, hvox::Voxel rhs) {
    return lhs.id == rhs.id;
}

inline bool operator!=(hvox::Voxel lhs, hvox::Voxel rhs) {
    return !(lhs == rhs);
}

#endif  // __hemlock_voxel_voxel_hpp
